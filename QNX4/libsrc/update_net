#! /bin/sh
# update_net is a procedure which should be run in sysinit.n during
# bootup in order to copy new information onto boot disks other
# than node 1.
# update_net is now limited to only files which must be updated
# as soon as a computer boots. Other updates are handled by
# osupdate.

chmod g-w,o-w /

# arg 1 is a file
# arg 2 is a directory
function copy_unless_identical {
  if [ -f "$1" -a -d "$2" ]; then
	if [ -f "$2/$1" ] && cmp $1 $2/$1 >/dev/null; then
	  :
	else
	  cp -vpf $1 $2/$1
	fi
  else
	echo "Error in copy_unless_identical $*" >&2
  fi
}
if [ ! /etc -ef //1/etc ]; then
  cd //1/etc
  copy_unless_identical passwd /etc
  copy_unless_identical group /etc
  copy_unless_identical shadow /etc
  copy_unless_identical profile /etc
  copy_unless_identical sudoers /etc
  [ /etc/motd -ef //1/etc/motd ] || ln -fs //1/etc/motd /etc/motd
  cd //1/etc/config
  copy_unless_identical node.map    /etc/config
  copy_unless_identical sysinit.all /etc/config
  copy_unless_identical TZ.init     /etc/config
  copy_unless_identical netmaptrap  /etc/config
  echo "Updating netmap from server"
  netmap -n1 | egrep -v "^(mask)? *[0-9]+ +3"	>/etc/config/netmap
  netmap -f
  [ ! -f /etc/ssh_config ] && ln -s //1/etc/ssh_config /etc/ssh_config
fi

function ssh_link {
  [ ! -f "$2" ] && ln -fs //1/usr/local/bin/$1 $2
}
if [ ! /usr/local/bin -ef //1/usr/local/bin ]; then
  cd //1/usr/local/bin
  cp -vpn osupdate /usr/local/bin/osupdate
  cp -vpn sudo /usr/local/bin/sudo
  cd /usr/local/bin
  ssh_link ssh1 ssh1
  ssh_link ssh1 ssh
  ssh_link ssh1 slogin
  ssh_link scp1 scp
  ssh_link ssh-keygen1 ssh-keygen
fi

arc=//1/etc/config/archive/sysinit.$NODE,v
cd /etc/config
if [ -f $arc ]; then
  rcs -q -l $arc && ci -q -u -m"Unregistered Changes" $arc
else
  echo "Sysinit for node $NODE" | ci -q -u -t $arc
fi

# Don't remap spool on //23/
[ $NODE = 23 ] && exit 0

cd /usr
/bin/find spool -type l -printf "%p %l " \
   -exec "/usr/bin/fullpath -t //1/usr/{}" |
( while read link old new; do
    if [ $old != $new ]; then
      ln -fs $new $link
	  echo "Linking /usr/$link -> $new"
    fi
  done
)
