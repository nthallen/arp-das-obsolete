#! /usr/local/bin/perl
#----------------------------------------------------------------
# http://www.MobileComm.com/scripts/mobilecomm/wwwpage.exe
# PIN => "153342"
# MSSG => "Help"
# Q1 => "1"
#----------------------------------------------------------------

$| = 1;
my ( $msg, @msg );
my $msglimit = 120;

my $verbose = -t STDIN;

if ( $0 =~ /mailpage/ ) {
  # $ENV{TZ} = "est05edt04,M4.1.0/2,M10.5.0/2";
  # { my ( $sec, $min, $hour ) = localtime;
  #   exit 0 if ( $hour > 23 || $hour < 7 );
  # }
  my ( $from, $subject );

  while (<STDIN>) {
	last if /^$/;
	chomp;
	if ( s/^From: // ) {
	  if ( /<(\w+)(\@huarp.harvard.edu)?>/ ) {
		$from = $1;
	  } else {
		s/ <.*>$//;
		if ( /\(([^)]+)\)/ ) {
		  $from = $1;
		} else {
		  $from = $_;
		}
	  }
	} elsif ( s/^Subject: // ) {
	  $subject = $_;
	}
  }
  push( @msg, "E:$from: $subject:" );
}

print "Enter Message followed by ^D or a plain '.':\n"
  if $verbose;
while (<STDIN>) {
  chomp;
  last if /^\.$/;
  next if /^\s*>/ && $0 =~ /mailpage/;
  s/([-=][-=])[-=]+/$1/g;
  push( @msg, $_ );
}
my $msg = join( " ", @msg );
$msg =~ s/^\s+//;
$msg =~ s/\s+$//;
$msg =~ s/\s+/ /g;
if ( length($msg) > $msglimit ) {
  print "Truncating message\n" if $verbose;
  $msg = substr $msg,0,$msglimit;
}

# print "Message is:\n$msg\n";

$SIG{HUP} = 'IGNORE' unless $verbose;

if ( $verbose || ( fork == 0 ) ) {
  open( STDERR, ">/dev/null" );
  open( STDOUT, ">/dev/null" );
  open( STDIN, "</dev/null" );
  use HTTP::Request::Common qw(POST);
  use LWP::UserAgent;
  $ua = new LWP::UserAgent;
  $ua->agent("Mozilla/3.01 (Win95; I)");

  my $server =
  #   'http://www.arp/cgi-bin/script.cgi';
	 'http://www.MobileComm.com/scripts/mobilecomm/wwwpage.exe';

  my $req =
	POST $server,  [ PIN => '153342', MSSG => $msg, Q1 => '1' ];
  $req->header(
	ACCEPT =>
	  "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*",
	CONNECTION =>
	  'Keep-Alive',
	REFERER =>
	  'http://www.arp.harvard.edu/~nort/paging/wwwpager.html' );

  print "Contacting $server\n" if $verbose;

  my $response = $ua->request($req);
  
# 
#   if ( $verbose ) {
# 	my $content;
# 	if ( $response->is_success ) {
# 	  $content = $response->content;
# 	} else {
# 	  $content = $response->error_as_HTML;
# 	}

# 	use HTML::FormatText;
# 	use HTML::TreeBuilder;
# 	my $content = $response->content;
# 	my $html = new HTML::TreeBuilder;
# 	$html->parse($content);
# 	my $formatter =
# 	  HTML::FormatText->new(leftmargin => 0, rightmargin => 60 );
# 	my $text = $formatter->format($html);
# 	print $text;
#   }

#   exit 1 unless $response->is_success;
  die "Error response from mobilecomm\n"
    unless $response->is_success;
}
exit 0;
