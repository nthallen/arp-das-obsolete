#! /usr/local/bin/perl
#----------------------------------------------------------------
# http://www.MobileComm.com/scripts/mobilecomm/wwwpage.exe
# PIN => "153342"
# MSSG => "Help"
# Q1 => "1"
#----------------------------------------------------------------

$| = 1;
my ( $msg, @msg );
my $msglimit = 200;

my $verbose = -t STDIN;

my %jitterfrom = (
  'abcdhelp@abcd.harvard.edu' => 'abcd',
  'helpdesk@huarp.harvard.edu' => 'huarp'
);

if ( $0 =~ /mailpage/ && ! $verbose ) {
  # $ENV{TZ} = "est05edt04,M4.1.0/2,M10.5.0/2";
  # { my ( $sec, $min, $hour ) = localtime;
  #   exit 0 if ( $hour > 23 || $hour < 7 );
  # }
  push( @msg, read_header() );
}

print "Enter Message followed by ^D or a plain '.':\n"
  if $verbose;
while (<STDIN>) {
  chomp;
  last if /^\.$/;
  next if /^\s*>/ && $0 =~ /mailpage/;
  s/(.)\1{2,}/$1$1$1/g;
  push( @msg, $_ );
}
my $msg = join( " ", @msg );
$msg =~ s/^\s+//;
$msg =~ s/\s+$//;
$msg =~ s/\s+/ /g;
if ( length($msg) > $msglimit ) {
  print "Truncating message\n" if $verbose;
  $msg = substr $msg,0,$msglimit;
}

# print "Message is:\n$msg\n";
# exit 0;

$SIG{HUP} = 'IGNORE' unless $verbose;

if ( $verbose || ( fork == 0 ) ) {
  open( STDERR, ">/dev/null" );
  open( STDOUT, ">/dev/null" );
  open( STDIN, "</dev/null" );
  use HTTP::Request::Common qw(POST);
  use LWP::UserAgent;
  $ua = new LWP::UserAgent;
  $ua->agent("Mozilla/3.01 (Win95; I)");

  my $server =
  #   'http://www.arp/cgi-bin/script.cgi';
  #	 'http://www.MobileComm.com/scripts/mobilecomm/wwwpage.exe';
  	 'http://www.MobileComm.com/cgi-bin/wwwpage.exe';
  

  my $req =
	POST $server,  [ PIN => '153342', MSSG => $msg, Q1 => '1' ];
  $req->header(
	ACCEPT =>
	  "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*",
	CONNECTION =>
	  'Keep-Alive',
	REFERER =>
	  'http://www.arp.harvard.edu/~nort/paging/wwwpager.html' );

  print "Contacting $server\n" if $verbose;

  my $response = $ua->request($req);
  die "Error response from mobilecomm\n"
    unless $response->is_success;
}
exit 0;

sub read_header {
  my @msg;
  my ( $from, $subject );
  my $boundary;

  while (<STDIN>) {
	last if /^$/;
	chomp;
	if ( s/^From: // ) {
	  if ( /<(\w+)(\@huarp.harvard.edu)?>/ ) {
		$from = $1;
	  } else {
		s/ <.*>$//;
		if ( /\(([^)]+)\)/ ) {
		  $from = $1;
		} else {
		  $from = $_;
		}
	  }
	  exit 0 if $from =~ m/Wildflower787763\@aol.com/;
	} elsif ( s/^Subject: // ) {
	  $subject = $_;
	} elsif ( m|^Content-Type:\s+Multipart/mixed;\s+boundary="(.*)"$|i ) {
	  $boundary = $1;
	} elsif ( m|^Mailing-List: contact perl5-porters-help| ) {
	  exit 0;
	}
  }
  if ( $boundary ) {
	# Skip MIME blather
	while (<STDIN>) {
	  last if m/^--$boundary/;
	}
	# Skip MIME headers
	# Ideally, we'd interpret the content encoding, etc.
	while (<STDIN>) {
	  last if m/^$/;
	}
  }
  if ( $jitterfrom{$from} ) {
	$from = $jitterfrom{$from};
	$subject =~ s|^Notification: (\w+/\d+)$|$1|;
	push( @msg, "J:$from:$subject:" );
	my $line = <STDIN>;
	$line = <STDIN>;
	$line = <STDIN>;
	$line =~ s/ $subject//;
	push( @msg, $line );
	while (<STDIN>) {
	  last if /ORIGINAL MESSAGE FOLLOWS/;
	}
	$line = <STDIN>; $line = <STDIN>;
	push( @msg, read_header() );
  } elsif ( $subject =~ s/^(BOUNCE [-\w]+)\@abcd.harvard.edu:\s*// ) {
	my $lead = $1;
	$subject = "Non-mem" if $subject =~ /Non-member submission/;
	$subject = "Admin" if $subject =~ /Admin request:/;
	push( @msg, "$lead:$subject" );
	push( @msg, read_header() );
  } else {
	push( @msg, "E:$from:$subject:" );
  }
  @msg;
}
