# QNX 4.20 Installation over the network.
#__USAGE
#%C	[-u] [-d <driver>] [-f] [-L] [-A] [-N] [-W] -t <target node>
#	-u Upgrade only: don't reinitialize the disk
#	-d <driver> specify disk driver other than Fsys.ide
#	-p <driver parameters> specify driver parameters
#	-f Interactively set fdisk parameters
#	-l Disk is very large: add a special boot partition
#	-L Set hardware clock using local time
#	-t <target node> specify target node (Required)
#	-R Don't ask (Rambo mode)
#	-A Add network driver for Arcnet
#	-N Add network driver for NE1000
#	-W Add network driver for WD8003
#
typeset UPGRADE LIBS_TOO FDISK SRCNODE TGTNODE DISKDRV DISKPARM LOCAL
typeset NetA NetN NetW
typeset opts excl n j option
UPGRADE=no
FDISK=no
LARGE=no
RAMBO=no
SRCNODE=$NODE
DISKDRV=Fsys.ide
DISKPARM=-P
NetA="# "
NetN="# "
NetW="# "
unset LOCAL
while getopts "uUd:p:Lt:flRANW" option; do
  case $option in
	[uU]) UPGRADE=yes;;
	d) DISKDRV=$OPTARG; DISKPARM="";;
	p) DISKPARM="$OPTARG";;
	t) TGTNODE=$OPTARG;;
	f) FDISK=yes;;
	L) LOCAL=-l;;
	l) LARGE=yes;;
	R) RAMBO=yes;;
	A) NetA="";;
	N) NetN="";;
	W) NetW="";;
	?) echo; exit 1;;
	*) echo Unsupported option: -$option; exit 1;;
  esac
done

if [ -z "$TGTNODE" ]; then
  echo Must specify a target node
  exit 1
fi

function hitanykey {
  if [ $RAMBO = no ]; then
	echo \\nContinue? [Y/N]: \\c; read j
	case $j in [nN]*) exit 1;; esac
  fi
}

echo QNX 4.20 Network Installation\\c
[ $UPGRADE = yes ] && echo " Upgrade\\c"
echo " to node $TGTNODE from node $SRCNODE"

#----------------------------------------------------------------
# Verify that configuration options are defined
#----------------------------------------------------------------
for n in $SRCNODE 1; do
  opts=`grep ^$TGTNODE: //$n/etc/config/node.map | cut -f 9 -d:`
  excl=${opts##*,}
  opts=${opts%%,*}
  [ -n "$opts" ] || {
	echo No configuration options for node $TGTNODE in //$n/etc/config/node.map
	exit 1
  }
done

#----------------------------------------------------------------
# Check to see that we can talk to the remote node
#----------------------------------------------------------------
sin -n$TGTNODE info >/dev/null || exit 1

if [ $UPGRADE = yes ]; then
  export TZ=est05edt04,M4.1.0/2,M10.5.0/2
  on -n $TGTNODE clock -b cyan -f bwhite "+%D %r" &
fi
echo Setting time from node $SRCNODE
rtc -s net $TGTNODE
on -n $TGTNODE rtc $LOCAL -s hw
hitanykey

if [ $UPGRADE != yes ]; then
  echo \\fInstalling File System
  # Don't install Fsys if we can find the name
  namewait -n $TGTNODE -t 0 qnx/fsys 2>/dev/null ||
	on -n $TGTNODE -t //$TGTNODE/dev/con1 Fsys
  on -n $TGTNODE $DISKDRV $DISKPARM
  while [ ! -b //$TGTNODE/dev/hd0 ]; do
	echo Waiting for //$TGTNODE/dev/hd0 to appear...
	sleep 2
  done
  if [ $FDISK = yes ]; then fdisk //$TGTNODE/dev/hd0
  else
	[ $LARGE = yes ] && fdisk //$TGTNODE/dev/hd0 ADD QNZ 2m
	fdisk //$TGTNODE/dev/hd0 ADD QNX ALL
  fi
  fdisk //$TGTNODE/dev/hd0 show
  hitanykey

  on -n $TGTNODE mount -p //$TGTNODE/dev/hd0
  if [ $LARGE = yes ]; then
	dinit -hq //$TGTNODE/dev/hd0t79
	on -n $TGTNODE mount //$TGTNODE/dev/hd0t79 //$TGTNODE/hd0
	on -n $TGTNODE dcheck -m //$TGTNODE/hd0
    hitanykey
  fi
  dinit -hq //$TGTNODE/dev/hd0t77
  on -n $TGTNODE mount //$TGTNODE/dev/hd0t77 //$TGTNODE/hd
  on -n $TGTNODE dcheck -m //$TGTNODE/hd
  hitanykey
  echo Modifying the prefix table for node $TGTNODE
  on -n $TGTNODE prefix -R /=//$TGTNODE/hd
  prefix -n$TGTNODE
  fullpath //$TGTNODE/
  hitanykey
else
  # Would like to check to make sure I am modifying the right thing
  echo Please verify that I am addressing the correct disk:
  fullpath //$TGTNODE/
  hitanykey
  echo Installing new bootstrap loader
  dinit -hb //$TGTNODE/dev/hd0t77
  hitanykey
fi

#----------------------------------------------------------------
# Copy over file systems via osupdate
#----------------------------------------------------------------
osupdate -f os.420 $SRCNODE $TGTNODE
hitanykey
if [ $TGTNODE != 1 ]; then
  osupdate 1 $TGTNODE
  hitanykey
fi

echo Making Standard Links
on -f $TGTNODE //$SRCNODE/bin/sh -c //$SRCNODE/etc/make_links
set -v
ln -fs sendmail //$TGTNODE/usr/bin/mailq
ln -fs sendmail //$TGTNODE/usr/bin/newaliases
ln -fs rmail.sendmail //$TGTNODE/usr/bin/rmail
set +v
hitanykey

#----------------------------------------------------------------
# Perform configuration
#----------------------------------------------------------------
typeset sysinit
cd //$TGTNODE/etc/config
sysinit=sysinit.$TGTNODE
[ -f $sysinit ] && sysinit=sysinit.u
pwd
echo Creating $sysinit
cat > $sysinit <<-END_OF_FILE
#----------------------------------------------------------------
# Sysinit for Node $TGTNODE booting from disk
#----------------------------------------------------------------
set -i
export TZ=est05edt04,M4.1.0/2,M10.5.0/2
rtc $LOCAL hw
Dev &
Dev.con -n 4 &
reopen //0/dev/con1
echo Booting Node \$NODE from disk \(\$0\)
Dev.ser &
Dev.par &
Fsys.floppy &
# emu87 &

#----------------------------------------------------------------
# Start up the QNX Network
#----------------------------------------------------------------
Net &
${NetA}Net.arcnet -s &
${NetN}Net.ether1000 -l 2 -6 -i 9 -s 16 -n 2 &
${NetW}Net.ether8003 -l 2 -n 2 &
netmap -f
# nameloc &

#----------------------------------------------------------------
# Perform remote initializations
#----------------------------------------------------------------
if test -d //1/etc; then
  echo Setting Time from Network
  rtc net 1
  rtc $LOCAL -s hw
fi
if test -f //1/etc/update_net; then //1/etc/update_net; fi
clock -b cyan -f bwhite "+%D %r" &
freeze -cdz /etc/logo.F
tinit -T /dev/con* -t /dev/con1 &
END_OF_FILE

echo Transferring licenses
license //${SRCNODE:-1}/etc/licenses //$TGTNODE/etc/licenses
hitanykey

echo \\nCreating a boot image
typeset PROC32 image
cpu=`sin -n$TGTNODE -h net | cut -c 13-15`
case $cpu in
  386) PROC32=yes;;
  486) PROC32=yes;;
  586) PROC32=yes;;
  *)   PROC32=no;;
esac
if [ $PROC32 = yes ]; then image=hard32.$TGTNODE
else image=hard16.$TGTNODE
fi
cd //$TGTNODE/boot/build
if [ -f $image ]; then mv -vf $image $image.old; fi
if [ $PROC32 = yes ]; then

#--------------------------------
# Intro to the 32-bit OS version
#--------------------------------
cat >$image <<-END_OF_FILE
sys/Proc32
\$ 52000 Proc32 -l $TGTNODE

sys/Slib16
\$ 1 Slib16

sys/Slib32
\$ 1 Slib32

END_OF_FILE

else

#--------------------------------
# Intro to the 16-bit OS version
#--------------------------------
cat >$image <<-END_OF_FILE
sys/Proc16
\$ 44000 Proc16 -l $TGTNODE

sys/Slib16
\$ 1 Slib16

END_OF_FILE

fi


#--------------------------------
# Common stuff:
#--------------------------------
cat >>$image <<-END_OF_FILE
/bin/Fsys
\$ 8000 Fsys

/bin/$DISKDRV
\$ 1000 $DISKDRV $DISKPARM

/bin/mount
\$ 1000 mount -p \$h \$ht77 /

/bin/sinit
\$ 1000 sinit  TERM=qnx
END_OF_FILE

cd //$TGTNODE/boot
make b=$image
if [ $LARGE = yes ]; then
  cp //$TGTNODE/hd0/.boot //$TGTNODE/hd0/.altboot
  cp images/$image //$TGTNODE/hd0/.boot

  fdisk //$TGTNODE/dev/hd0 loader
  fdisk //$TGTNODE/dev/hd0 boot QNZ
else
  cp //$TGTNODE/.boot //$TGTNODE/.altboot
  cp images/$image //$TGTNODE/.boot

  fdisk //$TGTNODE/dev/hd0 loader
  fdisk //$TGTNODE/dev/hd0 boot QNX
fi

echo \\n\\nInstallation of QNX 4.20 Completed\\n\\n
