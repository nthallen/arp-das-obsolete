#! /bin/sh

#__USAGE
#%C	[-od1] date.run [date.run ...]
#	Perform Archive Operations an Experiment
#	Examples:
#	  archive 930506.2
#	  archive func/930506.2
#	  archive //2/home/hox/930506.2
#
typeset drive=od0 sval dest homedir

while getopts "o:" option; do
  case $option in
	o) drive="o$OPTARG";;
	\?) echo; exit 1;;
	*) echo Unsupported option: -$option; exit 1;;
  esac
done
let sval=$OPTIND-1
shift $sval

[ -z "$OD_NODE" ] && export OD_NODE=1
[ -z "$Experiment" ] && {
  echo archive: Experiment is undefined >&2
  exit 1
}
homedir=~$Experiment
case $homedir in
  ~*)
	echo archive: Cannot determine home directory for Experiment \"$Experiment\" >&2
	exit 1;;
  \/\/[0-9]*)
	echo Home directory is node-specific! >&2
	exit 1;;
esac
dest=//$OD_NODE/$drive$homedir

for j in $*; do
  if [ ! -d "$j" ] ; then
	echo Argument $j is not a directory
	exit 1
  fi
  k=${j#*$homedir/}
  echo Directory $j will be backed up to $dest/$k
done
echo -n "Is that correct? [n/y] "
read j
case $j in
  [yY]*) : ;;
  *) exit 1;;
esac

# working down here:
# Want to use ~$Experiment
if [ -b //$OD_NODE/dev/od0 ]; then
   echo Optical Disk Backup
   if [ -d //$OD_NODE/od ]; then
     until odout; do exit 1; done
   fi
   for i in First Second Third
   do
	  while :; do
		echo Insert $i Optical Disk and Press Return when Ready or N to skip: \\c
		read invar
		case $invar in
		  [nN]*) echo Trying to break; break;;
		esac
		if odin writable; then break; fi
	  done
	  if [ ! -d //$OD_NODE/od ]; then break; fi
	  for j in $*; do
		k=${j##*/usr/spade/}
		df -h //$OD_NODE/od
		echo Optical Disk Backup of $j Proceeding ...
		chmod o+rx //$OD_NODE/od/usr
		chmod o+rx //$OD_NODE/od/usr/spade
		cp -frc $j //$OD_NODE/od/usr/spade/$k
		chmod o+rx //$OD_NODE/od/usr/spade/$k
		echo $i Optical Backup to //$OD_NODE/od/usr/spade/$k Complete
	  done
      odout
   done
   odin
   on -n 5 sh report_arch $*
else
   echo Optical Drive not recognised
fi

echo
df -h .
echo

echo Proceed with Hard Disk Backup? [Y/N] \\c
read rv
case $rv in
  [nN]*) exit 0;;
esac

if test ! -d data
then
   mkdir data
fi
for j in $*; do
  k=${j##*/usr/spade/}
  k=data/`dirname $k`/`basename $j`.pax
  echo Hard Disk Backup of $j Proceeding ...
  mkdir -p `dirname $k`
  pax -w -f $k $j
  freeze -v $k
  echo Hard Disk Backup to $k.F Complete
done
