#! /bin/sh
# transfer is designed to transfer flight data from a remote system
# to the local directory, archive it and perform reduction on it.
#
# Obvious extensions include specifying whether or not to
# Copy, Archive or Reduce. Also, more checking of directories might
# be appropriate.

#__USAGE
#%C <remote dir>
#
#	<remote dir> is the remote source directory in scp format
#	( [host:]path ). If host: is omitted, the value of the
#	variable RemoteHost (specified in Experiment.config) will be
#	used. If the path specified is relative, the value of HomeDir
#	from Experiment.config will be prefixed to it.
#
#	fld_transfer requires Experiment.config, in which Experiment
#	and HomeDir must be defined. In addition, the following may
#	be defined:
#	
#	DiskID once referred to optical disk archiving.
#	
#	RemoteHost is the name of the remote system from which the
#	data will be transferred. If this is not specified, the host
#	must be specified explicitly on the command line in scp
#	notation ( host:path ).
#	
#	TransNotify is the name ( or list of names ) to which mail
#	will be sent upon completion. By default, mail is sent to the
#	user.
#
#	fld_transfer recursively copies the target directory into
#	a subdirectory of the Experiment's home directory.

typeset HomeDir source target i id drive status_msg status_code

status_code='Transferred'
subject_line="$*"
[ -z "$TransNotify" ] && TransNotify=`id -un`

function mail_msg {
  echo "Subject: $status_code $subject_line\n\n$status_msg" |
	sendmail $TransNotify
}

function stat_msg {
  echo fld_transfer: $* >&2
  status_msg="$status_msg\n$*"
}

function err_msg {
  stat_msg $*
  status_code='Error'
}

function fail_msg {
  stat_msg "fld_transfer: $*"
  status_code='Fail'
  mail_msg
  exit 1
}

#----------------------------------------------------------------
# Load the configuration
#----------------------------------------------------------------
cfile=Experiment.config
[ ! -f "$cfile" ] && fail_msg Unable to locate configuration file $cfile
. $cfile
[ -z "$Experiment" ] && fail_msg Experiment undefined in $cfile
# [ -d "$HomeDir" ] || fail_msg Unable to locate home directory $HomeDir
# [ -z "$DiskID" ] && fail_msg DiskID undefined in $cfile
# [ -z "OD_NODE" ] && OD_NODE=1
export Experiment

subject_line="$Experiment $subject_line"

#----------------------------------------------------------------
# parse the arguments
#----------------------------------------------------------------
for source in ; do
  case $source in
	*:*) host=${source%%:*};dir=${source#*:};;
	*) host=$RemoteHost;dir=$source;;
  esac
  [ -z "$host" -a -z "$RemoteHost" ] &&
	fail_msg RemoteHost not defined
  case $dir in
	\/*) : ;;
	*) dir=$HomeDir/$dir;;
  esac
  source=$host:$dir
  sources="$sources $source"
done

echo Beginning transfer of $subject_line
if [ -z "$FLD_TRANSFER" ]; then
  FLD_TRANSFER=xxx on -t /dev/con $0 $*
  exit 0
fi

#----------------------------------------------------------------
# Copy the data
#----------------------------------------------------------------
for source in $sources; do
  target=${source##*$HomeDir/}
  if [ -d "$target" ]; then
	stat_msg Data already transferred
	targets="$targets $target"
  else
	stat_msg Beginning transfer of $source to $target
	if scp -p -r $source $target; then
	  targets="$targets $target"
	else
	  err_msg scp $source $target failed
	fi
  fi
done

[ -n "$targets" ] || fail_msg "No complete data sets transferred"

#----------------------------------------------------------------
# Perform reduce operations
#----------------------------------------------------------------
for target in $targets; do
  if [ -f $target/.CKSUM ]; then
	tmpf=/tmp/ft.$NODE.$$
	rm -f $tmpf
	dircksum $target >$tmpf 2>&1
	while read j; do
	  stat_msg "$j"
	done <$tmpf
	rm -f $tmpf
  else
	stat_msg "No .CKSUM present"
  fi
  if reduce $tgtloc$target; then
	stat_msg Transfer and reduce of $tgtloc$target completed
  else
	err_msg Reduce $tgtloc$target failed
  fi
done

mail_msg
