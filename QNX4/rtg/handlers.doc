This document is intended to summarize the label mappings for
use by key handlers. Most dialogs are labeled with a short sequence
of letters. The first letter identifies the handler. This allows
some modularity in the program, since a new module does not have
to be directly supported inside existing handlers. Subsequent
letters in the label may be used by the specific handler to
determine the nature of the request.

basewin.c: 'B'
   cP Channel Properties
   cS Channel/Create/Spreadsheet
   cC Channel/Create/Test(dummy)
   gP Graph Properties
   gC Graph Create
   gD Graph Delete
   wP Window Properties
   wC Window Create
   wD Window Delete
   C  Clear
   T  Trigger
   A  Arm
   N  No Op (for testing)

channels.c:	'C' handler for ChanTree_Menu()
   M  Channel Menu
   C  Dummy Channel Create
   F  File Menu

proper.c: 'r' for the time being, will switch to 'P' when everyone moves.
  chanprop.c:
  axisprop.c:
  windprop.c:	
  globprop.c:
  graphprop.c:

Axis Properties: The strategy that is working
  Create the picture in iEdit
  Give all the useful fields tags beginning with "AP" (for Axis Properties)
  Every item created by iEdit starts off with a tag beginning with "P"
  Write/Only elements should get tags that don't match "AP*"
  Add "Apply" and "Reset" via "bars" argument to Dialog
  On "Apply" CopyElements "AP*" and process them

Properties Strategy
  void Properties(const char *name, int proptype);
  Each properties dialog supports one instance at a time:
  hence for axis props, we'll treat that as 4 separate dialogs.
  Create the picture in iEdit {
	All data items should have tags beginning with "AP"
	Interactive items can have tags other than "Y", which is
	used for "Apply"
  }
