%---------------------------------------------------------
% My custom scope rules
%---------------------------------------------------------

ATTR Env: Environment;
CHAIN _DeclKeys: VOID;
CHAIN _RefKeys: VOID;
ATTR GotKeys: VOID;

CLASS SYMBOL AnyScope END;
SYMBOL Program INHERITS AnyScope END;
SYMBOL FunctionRange INHERITS AnyScope END;
SYMBOL Program COMPUTE
  SYNT.Env = NewEnv();
  END;
SYMBOL FunctionRange COMPUTE
  SYNT.Env = NewScope(INCLUDING AnyScope.Env);
  END;

SYMBOL Program COMPUTE
  CHAINSTART HEAD._DeclKeys = 1;
  CHAINSTART HEAD._RefKeys = TAIL._DeclKeys;
  SYNT.GotKeys = TAIL._RefKeys;
  END;
  
ATTR PrevDef: DefTableKey;
ATTR UseBeforeDef: int;
ATTR DefCond: int;

CLASS SYMBOL DeclInstance END;
SYMBOL DeclLValue INHERITS DeclInstance END;
SYMBOL FunctionDef INHERITS DeclInstance END;
CLASS SYMBOL RefInstance END;
SYMBOL RefLValue INHERITS RefInstance END;
SYMBOL FunctionInvocation INHERITS RefInstance END;

%--------------------------------------------------------------------
% I process all the declarations first. This forces all references to
% a given variable within a scope to be associated with a declaration
% within the same scope whether preceeding or following. I require
% that the declaration preceed the reference, but do not allow a
% mid-block declaration to introduce a new object.
%--------------------------------------------------------------------
SYMBOL DeclInstance COMPUTE
  SYNT.PrevDef = KeyInScope(INCLUDING AnyScope.Env, THIS.Sym) <- THIS._DeclKeys;
  SYNT.Key = DefineIdn(INCLUDING AnyScope.Env, THIS.Sym) <- SYNT.PrevDef;
  IF(NE(THIS.PrevDef,NoKey),
     message( ERROR, "Illegal redeclaration", 0, COORDREF ));
  THIS._DeclKeys = THIS.Key;
  THIS._RefKeys = ResetDeclared(THIS.Key, 1) <- THIS._RefKeys;
  END;
CLASS SYMBOL RefInstance COMPUTE
  SYNT.PrevDef = KeyInEnv(INCLUDING AnyScope.Env, THIS.Sym) <- THIS._RefKeys;
  SYNT.Key = DefineIdn(INCLUDING AnyScope.Env, THIS.Sym) <- THIS.PrevDef;
  THIS._RefKeys = ResetDeclared(THIS.Key,1);
  SYNT.UseBeforeDef = GetDeclared(THIS.Key,0);
  SYNT.DefCond = EQ(THIS.PrevDef,NoKey);
  IF(AND(NOT(THIS.DefCond),NOT(THIS.UseBeforeDef)),
    message (ERROR, CatStrInd ("Declaration must preceed use: ", THIS.Sym),
      0, COORDREF));
  END;
